@startuml
'https://plantuml.com/sequence-diagram

hide footbox
autoactivate on

participant "service client" as sc
participant "service server" as ss

group step 1: 유저 대기열 토큰
    sc -> ss : 콘서트 티켓 예약 페이지 요청 \n(GET /queue/token)
    note right
        접속자 수가 50명 이상이면 대기열을 세운다.
        접속자가 50명 이상인지 판단하는 방법은?
        접속자수에 상관없이 모든 유저에게 일단 토큰은 무조건 줘야할거 같다.
        접속자 수를 실시간으로 보여주고 줄어드는 것도 보여줘야 하나
        내 차례가 되면 접속시켜줘야 함
    end note
    ss -> ss : 토큰생성 및 저장 \n(UUID + 대기열을 관리할 수 있는 정보(대기순서 + 접속한 시간, 잔여시간 등))
    group optional 1: 대기열 현황 페이지
    ss --> sc : 50명 이상의 유저일 때 \n대기열을 보여주는 페이지 제공
    sc -> ss : 내 차례(?)가 오면 티켓 예매 페이지로 이동요청
    note right
        내 차례인건 어떻게 알 수 있나
    end note

    ss --> sc : 티켓 구입 페이지로 이동
    end
end

group step 2: 티켓 예매 화면
    sc -> ss : 가능한 날짜 요청\n(GET /reservation/available/date)
    ss -> ss : 토큰 검증
    ss --> sc : 예약 가능한 날짜 목록을 조회
    sc -> ss : 가능한 자리 요청\n(GET /reservation/available/seat)
    ss -> ss : 토큰 검증
    ss --> sc : 예약 가능한 자리 조회
    note right
        예약 가능한 자리는 1 ~ 50개
    end note
end

group step 3: 티켓 구매
    sc -> ss : 자리 예약 요청\n(POST /reservation)
    note right
        예약시 자리가 5분동안 임시 배정됨
        선점된 자리는 다른 유저가 예약하지 못함
        임시 배정시간 내에 결제가 이루어지지 않는다면\n
        배정신간이 해지되어야 한다.
    end note
    group 결재
        ss --> sc : 결제 화면으로 이동
        sc -> ss : 결재하기\n(POST /payment)
        ss -> ss : 포인트 차감
        note right
            가지고 있는 포인트를 차감한다.
            포인트가 없다면 예외를 터뜨린다. 다시 충전은?
        end note
    end
    ss --> sc : 자리가 예약이 된다면 성공/완료를 반환
end

group 금액 충전 / 조회
    sc -> ss : 포인트 조회\n(GET /point)
    ss --> sc : 조회한 포인트를 보내준다.
    sc -> ss : 포인트 충전\n(POST /point)
    ss --> sc : 충전된 포인트 및 총 포인트를 보여준다.
end

@enduml